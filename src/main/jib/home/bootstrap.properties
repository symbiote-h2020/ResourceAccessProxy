spring.profiles.active=standalone
server.port=8103

#################################################################
## AMQP config
#################################################################

spring.rabbitmq.host=symbiote_rabbitmq
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

rabbit.host=${spring.rabbitmq.host}
rabbit.username=${spring.rabbitmq.username}
rabbit.password=${spring.rabbitmq.password}

spring.rabbitmq.template.reply-timeout=15000
rabbit.replyTimeout=${spring.rabbitmq.template.reply-timeout}
rabbit.message-ttl=${spring.rabbitmq.template.reply-timeout}

#################################################################
## MongoDB config
#################################################################

spring.data.mongodb.host=symbiote_mongo

#################################################################
## RAP Configuration
#################################################################
rap.mongo.dbname = resources_db
# use this flags to enable/disable northbound interfaces
rap.northbound.interface.REST=true
rap.northbound.interface.OData=true
rap.northbound.interface.WebSocket=false
# use this flag to enable platform specific plugin
# (disable if external plugin is used)
rap.enableSpecificPlugin=true
## Rabbit specific binder bits
# spring.cloud.stream.binder.rabbit.default.default-delivery-mode=persistent
# spring.cloud.stream.binder.rabbit.default.acknowledge-mode=manual
# spring.cloud.stream.binder.rabbit.default.durable-subscription=true
# spring.cloud.stream.binder.rabbit.default.transacted=true
# spring.cloud.stream.binder.rabbit.default.default-requeue-rejected=true
# spring.cloud.stream.binder.rabbit.default.auto-bind-dlq=true
# spring.cloud.stream.binder.rabbit.default.republish-to-dlq=true

message = Hello!

# define the destination to which the input MessageChannel should be bound
spring.cloud.stream.bindings.input.destination = ResourceAccessProxys

# ensures 1 node in a group gets message (point-to-point, not a broadcast)
spring.cloud.stream.bindings.input.group = ResourceAccessProxys-group

# ensure that the Q is durable
spring.cloud.stream.bindings.input.durableSubscription = true

# use this flags to enable/disable payload validation
rap.validateActuatorPayload=true
rap.validateServicePayload=true
rap.validateServiceResult=true
