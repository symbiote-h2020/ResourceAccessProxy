// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.h2020.symbiote.ResourceAccessProxyApplication'
}

buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

ext.junitJupiterVersion = '5.0.0-M2'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'


jar {
    baseName = 'ResourceAccessProxy'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
    maven { 
        url "https://jitpack.io" 
    }
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.cloud:spring-cloud-starter-zipkin') // Causes the java.net.ConnectException
    compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
    
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.thymeleaf:thymeleaf-spring4")
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    compile ("org.springframework.boot:spring-boot-starter")
    testCompile ("org.springframework.boot:spring-boot-starter-test")
    compile ("org.springframework.boot:spring-boot-configuration-processor")
    compile ("org.springframework.boot:spring-boot-starter-amqp")
    testCompile ("com.jayway.jsonpath:json-path")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.apache.olingo:odata-commons-api:${'4.3.0'}")
    compile("org.apache.olingo:odata-commons-core:${'4.3.0'}")
    
    compile("org.apache.olingo:odata-server-api:${'4.3.0'}")
    compile("org.apache.olingo:odata-server-core:${'4.3.0'}")
    
    compile('com.github.symbiote-h2020:SymbIoTeLibraries:develop-SNAPSHOT')    
    //compile files('libs/SymbIoTeLibraries-0.1.2.jar')
    
    compile("org.springframework.boot:spring-boot-starter-websocket")
    
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE"
        mavenBom 'org.springframework.cloud:spring-cloud-sleuth:1.1.0.BUILD-SNAPSHOT'
    }
}

jacoco {
    toolVersion = "0.7.7.201606060606"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport
